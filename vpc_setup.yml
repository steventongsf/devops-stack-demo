- name: create vpc 
  hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import variables
      include_vars: vars/vpc_setup
    - name: create vpc 
      # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_net_module.html
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{ansible_state}}"
      register: vpcout
    - debug:
        var: vpcout
    - name : create public subnet 1
      # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_subnet_module.html
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{ansible_state}}"
        cidr: "{{PubSub1Cidr}}"
        map_public: yes
        resource_tags:
          # this is the name that displays in subnet console
          Name: mystack-pubsub1
      register: pubsub1_out
    - name : create public subnet 2
      # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_subnet_module.html
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{ansible_state}}"
        cidr: "{{PubSub2Cidr}}"
        map_public: yes
        resource_tags:
          # this is the name that displays in subnet console
          Name: mystack-pubsub2
      register: pubsub2_out
    - name : create public subnet 3
      # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_subnet_module.html
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{ansible_state}}"
        cidr: "{{PubSub3Cidr}}"
        map_public: yes
        resource_tags:
          # this is the name that displays in subnet console
          Name: mystack-pubsub3
      register: pubsub3_out
    - name : create private subnet 1
      # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_subnet_module.html
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{ansible_state}}"
        cidr: "{{PrivSub1Cidr}}"
        map_public: no
        resource_tags:
          # this is the name that displays in subnet console
          Name: mystack-privsub1
      register: privsub1_out
    # - name : create private subnet 2
    #   # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_subnet_module.html
    #   ec2_vpc_subnet:
    #     vpc_id: "{{vpcout.vpc.id}}"
    #     region: "{{region}}"
    #     az: "{{zone2}}"
    #     state: "{{ansible_state}}"
    #     cidr: "{{PrivSub2Cidr}}"
    #     map_public: no
    #     resource_tags:
    #       # this is the name that displays in subnet console
    #       Name: mystack-privsub2
    #   register: privsub2_out
    # - name : create private subnet 3
    #   # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_subnet_module.html
    #   ec2_vpc_subnet:
    #     vpc_id: "{{vpcout.vpc.id}}"
    #     region: "{{region}}"
    #     az: "{{zone3}}"
    #     state: "{{ansible_state}}"
    #     cidr: "{{PrivSub3Cidr}}"
    #     map_public: no
    #     resource_tags:
    #       # this is the name that displays in subnet console
    #       Name: mystack-privsub3
    #   register: privsub3_out
    - name: internet gateway
      # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_igw_module.html
      ec2_vpc_igw: 
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{ansible_state}}"
        resource_tags:
          # this is the name that displays in subnet console
          Name: mystack-igw
      register: igw_out
    - name: public route table
      # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec_vpc_route_table_module.html
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags: 
          Name: mystack-pub-routetable
        subnets:
          - "{{pubsub1_out.subnet.id}}"
          #- "{{pubsub2_out.subnet.id}}"
          #- "{{pubsub3_out.subnet.id}}"
        routes: 
          - dest: 0.0.0.0/0 
            gateway_id: "{{igw_out.gateway_id}}"
      register: pubRT_out
      # TODO Comment out nat gateway and implicit elastic ip address for now
    # - name: nat gateway
    #   # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_nat_gateway_module.html
    #   ec2_vpc_nat_gateway: 
    #     subnet_id: "{{pubsub1_out.subnet.id}}"
    #     region: "{{region}}"
    #     state: "{{ansible_state}}"
    #   register: NATGW_out
    # - debug:
    #     var: NATGW_out
    - name: private route table
      # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec_vpc_route_table_module.html
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags: 
          Name: mystack-pub-routetable
        subnets:
          - "{{privsub1_out.subnet.id}}"
          #- "{{privsub2_out.subnet.id}}"
          #- "{{privsub3_out.subnet.id}}"
        routes: 
          - dest: 0.0.0.0/0 
          #- gateway_id: "{{NATGW_out.nat.gateway_id}}"
      register: privRT_out

    - debug:
        var: "{{item}}"
      loop:
        - vpcout.vpc.id
        - pubsub1_out.subnet.id
        - pubsub2_out.subnet.id
        - pubsub3_out.subnet.id
        - privsub1_out.subnet.id
        - privsub2_out.subnet.id
        - privsub3_out.subnet.id
        - igw_out.gateway_id
        - pubRT_out.route_table.id
        #- NATGW_out.nat_gateway_id
        - privRT_out.route_table.id
    # Example to set variables
    - set_fact:
         vpcid: "{{vpcout.vpc.id}}"
         pubsub1id: "{{ pubsub1_out.subnet.id }}"
         pubsub2id: "{{ pubsub2_out.subnet.id }}"
         pubsub3id: "{{ pubsub3_out.subnet.id }}"
         privsub1id: "{{ privsub1_out.subnet.id }}"
         #privsub2id: "{{ privsub2_out.subnet.id }}"
         #privsub3id: "{{ privsub3_out.subnet.id }}"
         igwid: "{{ igw_out.gateway_id }}"
         pubRTid: "{{ pubRT_out.route_table.id }}"
         #NATGWid: "{{ NATGW_out.nat_gateway_id }}"
         privRTid: "{{ privRT_out.route_table.id }}"
         cacheable: yes
    # Example to output runtime info to file
    - name: copy variables for vpc output
      copy:
        # line references NAT gw, and 3 high avail. private subnet instances.  will only use one for now
         #content: "region: {{region}}\vpcid: {{ vpcout.vpc.id }}\npubsub1id: {{ pubsub1_out.subnet.id }}\npubsub2id: {{ pubsub2_out.subnet.id }}\npubsub3id: {{ pubsub3_out.subnet.id }}\nprivsub1id: {{ privsub1_out.subnet.id }}\nprivsub2id: {{ privsub2_out.subnet.id }}\nprivsub3id: {{ privsub3_out.subnet.id }}\nigwid: {{ igw_out.gateway_id }}\npubRTid: {{ pubRT_out.route_table.id }}\nNATGWid: {{ NATGW_out.nat_gateway_id }}\nprivRTid: {{ privRT_out.route_table.id }}\n"
         content: "region: {{region}}\nvpcid: {{ vpcout.vpc.id }}\npubsub1id: {{ pubsub1_out.subnet.id }}\npubsub2id: {{ pubsub2_out.subnet.id }}\npubsub3id: {{ pubsub3_out.subnet.id }}\nprivsub1id: {{ privsub1_out.subnet.id }}\nigwid: {{ igw_out.gateway_id }}\npubRTid: {{ pubRT_out.route_table.id }}\nprivRTid: {{ privRT_out.route_table.id }}\n"
         dest: vars/output_vars




